name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  lint-and-typecheck:
    runs-on: ubuntu-latest
    name: Lint and TypeScript Check
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci --legacy-peer-deps
      
    - name: Run TypeScript check
      run: npm run typecheck
      
    - name: Run ESLint
      run: npm run lint

  build-test:
    runs-on: ubuntu-latest
    name: Build Application
    needs: lint-and-typecheck
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci --legacy-peer-deps
      
    - name: Generate Prisma client
      run: npx prisma generate
      
    - name: Build application
      run: npm run build
      env:
        DATABASE_URL: "postgresql://test:test@localhost:5432/test"
        NEXTAUTH_URL: "http://localhost:3000"
        NEXTAUTH_SECRET: "test-secret"
        MINIO_ENDPOINT: "localhost:9000"
        MINIO_ACCESS_KEY: "test"
        MINIO_SECRET_KEY: "test"
        MINIO_BUCKET_NAME: "test"

  docker-build:
    runs-on: ubuntu-latest
    name: Docker Build Test
    needs: build-test
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      
    - name: Build Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        push: false
        tags: workflowpro:test
        cache-from: type=gha
        cache-to: type=gha,mode=max

  deploy-notification:
    runs-on: ubuntu-latest
    name: Deployment Ready
    needs: [lint-and-typecheck, build-test, docker-build]
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Deployment Ready
      run: |
        echo "âœ… All checks passed! Ready for deployment."
        echo "ðŸš€ Coolify will automatically deploy this commit."
        echo "ðŸ“¦ Commit SHA: ${{ github.sha }}"
        echo "ðŸ”— Repository: ${{ github.repository }}"